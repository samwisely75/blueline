name: Cucumber Integration Tests

on:
  push:
    branches: 
      # Only run on the feature branch for now
      - feature/clean-io-abstraction
  pull_request:
    branches: 
      - develop
      - main
    paths:
      # Run when test files or source files change
      - 'tests/**'
      - 'features/**'
      - 'src/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
      - '.github/workflows/cucumber-tests.yml'

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  # Set default log level for tests
  RUST_LOG: info,blueline=debug,integration_tests=debug

jobs:
  cucumber-tests:
    name: Run Cucumber Integration Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-cucumber-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-registry-cucumber-
          ${{ runner.os }}-cargo-registry-
    
    - name: Cache cargo index
      uses: actions/cache@v4
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-cucumber-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-index-cucumber-
          ${{ runner.os }}-cargo-index-
    
    - name: Cache cargo build
      uses: actions/cache@v4
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-cucumber-${{ hashFiles('**/Cargo.lock') }}-${{ hashFiles('src/**') }}
        restore-keys: |
          ${{ runner.os }}-cargo-build-cucumber-${{ hashFiles('**/Cargo.lock') }}-
          ${{ runner.os }}-cargo-build-cucumber-

    - name: Build test dependencies
      run: |
        echo "Building library and test dependencies..."
        cargo build --lib --verbose
        cargo build --tests --verbose

    - name: Check feature files exist
      run: |
        echo "Checking for feature files..."
        if [ -d "features" ]; then
          echo "Found feature files:"
          find features -name "*.feature" -type f | head -20
        else
          echo "No features directory found, tests will look for feature files"
        fi

    - name: Run Cucumber integration tests
      run: |
        echo "Running Cucumber integration tests..."
        # Run with timeout to prevent hanging tests
        timeout 300s cargo test --test integration_tests --verbose -- --nocapture
      continue-on-error: true
      id: cucumber-test

    - name: Run Cucumber tests with trace logging (on failure)
      if: steps.cucumber-test.outcome == 'failure'
      run: |
        echo "First run failed, retrying with trace logging..."
        RUST_LOG=trace timeout 300s cargo test --test integration_tests -- --nocapture --test-threads=1
      continue-on-error: true

    - name: Check test results
      run: |
        if [ "${{ steps.cucumber-test.outcome }}" == "failure" ]; then
          echo "::warning::Cucumber tests failed. This is expected during initial implementation."
          echo "Review the logs above for details."
          # Don't fail the workflow during initial implementation
          # Change this to 'exit 1' once tests are stable
          exit 0
        else
          echo "✅ Cucumber tests passed successfully!"
        fi

    - name: Upload test logs (if any)
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: cucumber-test-logs
        path: |
          **/*.log
          **/test_output.txt
        retention-days: 7
        if-no-files-found: ignore

  # Cross-platform compilation check - disabled for now to focus on tests
  # Uncomment when needed to verify cross-platform compatibility
  
  # cross-platform-check:
  #   name: Check Test Compilation - ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [windows-latest, macos-latest]
  #   
  #   runs-on: ${{ matrix.os }}
  #   
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
  #
  #   - name: Install Rust toolchain
  #     uses: dtolnay/rust-toolchain@stable
  #
  #   - name: Cache cargo registry
  #     uses: actions/cache@v4
  #     with:
  #       path: ~/.cargo/registry
  #       key: ${{ runner.os }}-cargo-registry-cucumber-${{ hashFiles('**/Cargo.lock') }}
  #       restore-keys: |
  #         ${{ runner.os }}-cargo-registry-cucumber-
  #         ${{ runner.os }}-cargo-registry-
  #
  #   - name: Check test compilation
  #     run: |
  #       echo "Checking that tests compile on ${{ matrix.os }}..."
  #       cargo test --test integration_tests --no-run --verbose
  #     continue-on-error: true
  #
  #   - name: Report compilation status
  #     run: |
  #       if [ $? -eq 0 ]; then
  #         echo "✅ Tests compile successfully on ${{ matrix.os }}"
  #       else
  #         echo "::warning::Tests don't compile on ${{ matrix.os }} - this may need platform-specific fixes"
  #       fi
  #     shell: bash